name: Understory CI

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

env:
  AWS_REGION: us-east-1
  IMAGE: public.ecr.aws/i4c2l4g3/understory
  DJANGO_IMAGE: $IMAGE:django
  POSTGRESQL_IMAGE: $IMAGE:postgresql

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: AWS
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: public.ecr.aws/i4c2l4g3
          # IMAGE_TAG: ${{ github.sha }}
          IMAGE_TAG: $DJANGO_IMAGE
        run: |
          docker build -f ./compose/production/django/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Build, tag, and push the Understory image
      #   run: docker build . --file ./compose/production/django/Dockerfile --tag $IMAGE:DJANGO_IMAGE 
      #   run: docker push $IMAGE:DJANGO_IMAGE
      # Test after build.
