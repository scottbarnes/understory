# name: Understory CI

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

env:
  # IMAGE: public.ecr.aws/i4c2l4g3/understory
  AWS_REGION: us-east-1
  DJANGO_IMAGE: django
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
  DJANGO_SLACK_CHANNEL: ${{ secrets.DJANGO_SLACK_CHANNEL }}
  DJANGO_SLACK_TOKEN: ${{ secrets.DJANGO_SLACK_TOKEN }}
  DJANGO_VERSION: django_latest
  IMAGE_TAG: ${{ github.sha }}
  POSTGRESQL_IMAGE: postgresql
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  # POSTGRES_HOST: localhost
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  # TEST_ENV: true
  DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # test stuff
      - name: Setup environment
        run: |
          mkdir -p .envs/.production
          bash ./setup_env.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to AWS ECR
        uses: docker/login-action@v1 
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and export to Docker
        # env:
        #   IMAGE_TAG: ${{ github.sha }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          load: true
          file: ./compose/production/django/Dockerfile
          tags: |
            public.ecr.aws/i4c2l4g3/understory:$IMAGE_TAG
            public.ecr.aws/i4c2l4g3/understory:django_latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Run tests
        run: |
          docker-compose -f production.yml run django python manage.py test
            
      - name: Build and push
        # env:
        #   IMAGE_TAG: ${{ github.sha }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./compose/production/django/Dockerfile
          tags: |
            public.ecr.aws/i4c2l4g3/understory:django_latest
            public.ecr.aws/i4c2l4g3/understory:$IMAGE_TAG
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # end test stuff

      # - name: Login to Public ECR
      #   uses: docker/login-action@v1
      #   with:
      #     registry: public.ecr.aws
      #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Setup environment
      #   run: |
      #     mkdir -p .envs/.production
      #     bash ./setup_env.sh

      # - name: Build docker images
      #   # env:
      #   #   IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -f ./compose/production/django/Dockerfile -t understory_production_django .
      #     docker tag understory_production_django:latest public.ecr.aws/i4c2l4g3/understory:$IMAGE_TAG
      #     docker tag understory_production_django:latest public.ecr.aws/i4c2l4g3/understory:django_latest

      # - name: Run tests
      #   run: |
      #     docker-compose -f production.yml run django python manage.py test

      # - name: Push docker images to ECR
      #   run: |
      #     echo "Pushing image to ECR..."
      #     # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push --all-tags public.ecr.aws/i4c2l4g3/understory
      #     # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      #     # echo "::set-output name=image::public.ecr.aws/i4c2l4g3/understory:$IMAGE_TAG"

      - name: Add key to ssh-agent.
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run : |
          mkdir -p ~/.ssh/
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan ${{ secrets.AWS_IP_ADDRESS }} >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

      - name: Deploy to AWS
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp -o StrictHostKeyChecking=no -r ./.env ./.envs production.yml ubuntu@${{ secrets.AWS_IP_ADDRESS }}:./understory
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_IP_ADDRESS }} << 'ENDSSH'
            cd ./understory
            source .env
            docker-compose -f production.yml pull
            docker-compose -f production.yml up -d
          ENDSSH
