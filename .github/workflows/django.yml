name: Understory CI

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

env:
  AWS_REGION: us-east-1
  # IMAGE: public.ecr.aws/i4c2l4g3/understory
  DJANGO_IMAGE: django
  POSTGRESQL_IMAGE: postgresql

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build docker images
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -f ./compose/production/django/Dockerfile -t public.ecr.aws/i4c2l4g3/understory:$IMAGE_TAG .
            docker build -f ./compose/production/django/Dockerfile -t public.ecr.aws/i4c2l4g3/understory:django_latest .

      - name: Run tests
        run: |
          mkdir -p .envs/.production
          touch .envs/.production/.django
          touch .envs/.production/.postgres
          bash ./setup_env.sh
          docker-compose -f production.yml run django python manage.py test

      - name: Push docker images to ECR
        run: |
            echo "Pushing image to ECR..."
            # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker push --all-tags public.ecr.aws/i4c2l4g3/understory
            # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            echo "::set-output name=image::public.ecr.aws/i4c2l4g3/understory:$IMAGE_TAG"

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
      #     # role-to-assume: arn:aws:iam::570577215317:role/scottbarnes

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: understory
      #     IMAGE_TAG: 1
      #   run: |
      #     # Build a docker container and push it to ECR 
      #     # docker build -f ./compose/production/django/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker build -f ./compose/production/django/Dockerfile -t public.ecr.aws/i4c2l4g3/$ECR_REPOSITORY:$IMAGE_TAG .
      #     echo "Pushing image to ECR..."
      #     # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push public.ecr.aws/i4c2l4g3/$ECR_REPOSITORY:$IMAGE_TAG
      #     # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      #     echo "::set-output name=image::public.ecr.aws/i4c2l4g3/$ECR_REPOSITORY:$IMAGE_TAG"
