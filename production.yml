version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  esdata:
    driver: local

services:

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: understory-production
    depends_on:
      - postgres
      # - elasticsearch
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    environment:
      - DJANGO_SETTINGS_MODULE=understory.settings.production
    # restart: always  # Don't enable while originally configuring.
    container_name: understory-production
    volumes:
      - ./static:/code/static  # Ensure UID 1000 on the local system has r/w on ./static.
      - ./media:/code/media  # Ensure UID 1000 on the local system has r/w on ./static.
      # - ./VOL_STATIC:/code/static  # Ensure UID 1000 on the local system has r/w on VOL_STATIC.
      # - ./db.sqlite3:/code/db.sqlite3  # Ensure UID 1000 on the local system has r/w on ./static.
    ports:
      - "5000:8000"
    command: bash -c "sleep 15 && /code/start"
    # command: tail -f /dev/null  # Keep container running when diagnosing gunicorn crash issues.

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: foxtail2_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    ports:
      - "5432:5432"
  
  #elasticsearch:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
  #  # image: launcher.gcr.io/google/elasticsearch2
  #  expose:
  #    - "9200"
  #    - "9300"
  #  volumes:
  #    - esdata:/usr/share/elasticsearch/data
  #  environment:
  #   - discovery.type=single-node  # Bypass checks and just run a single node.
#      - network.host=0.0.0.0  # Allow connections from all host.
#      - network.bind_host=localhost
#      - network.publish_host=0.0.0.0

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: foxtail2_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    # Enable gzip compression
    labels:
      - "traefik.http.middlewares.test-compress.compress=true"
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
  
