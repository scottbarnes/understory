version: '3'

# volumes:
#   production_postgres_data: {}
#   production_postgres_data_backups: {}
#   production_traefik: {}
#   production_django_media: {}
#   production_django_ojs: {}
#   esdata:
#     driver: local

services:

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: public.ecr.aws/i4c2l4g3/understory:django_latest
    depends_on:
      - postgres
      # - elasticsearch
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    environment:
      - DJANGO_SETTINGS_MODULE=understory.settings.production
    # restart: always  # Don't enable while originally configuring.
    # container_name: understory_production_django
    volumes:
      - ./production_django_static:/code/static  # whitenoise handles this. Ensure user running docker has r/w.
      - ./production_django_media:/code/media
      # - ./media:/code/media  # nginx. Ensure user running docker has r/w.
    ports:
      - "5000:8000"
    # command: bash -c "sleep 15 && /code/start"
    command: sh /code/start
    # command: /code/start
    # command: tail -f /dev/null  # Keep container running when diagnosing gunicorn crash issues.

  nginx:
    # build:
    #   context: .
    #   dockerfile: ./compose/production/nginx/Dockerfile
    image: nginx:1.19.10-alpine
    depends_on:
      - django
    volumes:
      - ./production_django_media:/usr/share/nginx/media:ro
      # - ./production_django_ojs:/usr/share/nginx/ojs:ro
      - ./compose/production/nginx/default.conf:/etc/nginx/conf.d/default.conf

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: public.ecr.aws/i4c2l4g3/understory:postgres_latest
    volumes:
      - ./production_postgres_data:/var/lib/postgresql/data:Z
      - ./production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    ports:
      - "5432:5432"

  traefik:
    # build:
    #   context: .
    #   dockerfile: ./compose/production/traefik/Dockerfile
    image: traefik:v2.6.3
    depends_on:
      - django
    volumes:
      - ./production_traefik:/etc/traefik/acme:z
      - ./compose/production/traefik/traefik.yml:/etc/traefik/traefik.yml
    # Enable gzip compression (maybe?)
    labels:
      - "traefik.http.middlewares.test-compress.compress=true"
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
      # - "0.0.0.0:8080:8080"
    # command: --api.insecure=true --providers.docker
  
